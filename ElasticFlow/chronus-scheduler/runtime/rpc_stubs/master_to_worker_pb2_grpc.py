# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import common_pb2 as common__pb2
import master_to_worker_pb2 as master__to__worker__pb2


class MasterToWorkerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RunJob = channel.unary_unary(
                '/MasterToWorker/RunJob',
                request_serializer=master__to__worker__pb2.RunJobRequest.SerializeToString,
                response_deserializer=common__pb2.Empty.FromString,
                )
        self.UpdateJob = channel.unary_unary(
                '/MasterToWorker/UpdateJob',
                request_serializer=master__to__worker__pb2.UpdateJobRequest.SerializeToString,
                response_deserializer=common__pb2.Empty.FromString,
                )
        self.NewGroup = channel.unary_unary(
                '/MasterToWorker/NewGroup',
                request_serializer=master__to__worker__pb2.NewGroupRequest.SerializeToString,
                response_deserializer=common__pb2.Empty.FromString,
                )
        self.KillJob = channel.unary_unary(
                '/MasterToWorker/KillJob',
                request_serializer=master__to__worker__pb2.KillJobRequest.SerializeToString,
                response_deserializer=common__pb2.Empty.FromString,
                )
        self.BroadcastFinish = channel.unary_unary(
                '/MasterToWorker/BroadcastFinish',
                request_serializer=common__pb2.Empty.SerializeToString,
                response_deserializer=common__pb2.Empty.FromString,
                )
        self.TrainingBegin = channel.unary_unary(
                '/MasterToWorker/TrainingBegin',
                request_serializer=common__pb2.Empty.SerializeToString,
                response_deserializer=common__pb2.Empty.FromString,
                )
        self.RestartTrainers = channel.unary_unary(
                '/MasterToWorker/RestartTrainers',
                request_serializer=common__pb2.Empty.SerializeToString,
                response_deserializer=common__pb2.Empty.FromString,
                )
        self.ShutDown = channel.unary_unary(
                '/MasterToWorker/ShutDown',
                request_serializer=common__pb2.Empty.SerializeToString,
                response_deserializer=common__pb2.Empty.FromString,
                )


class MasterToWorkerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RunJob(self, request, context):
        """starts a job on worker
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateJob(self, request, context):
        """updates a job on worker
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewGroup(self, request, context):
        """new group
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KillJob(self, request, context):
        """kills a job on worker
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BroadcastFinish(self, request, context):
        """send broadcast finish message to workers
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TrainingBegin(self, request, context):
        """send train begin message to workers
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestartTrainers(self, request, context):
        """restart all the trainers
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShutDown(self, request, context):
        """shut down the worker
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MasterToWorkerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RunJob': grpc.unary_unary_rpc_method_handler(
                    servicer.RunJob,
                    request_deserializer=master__to__worker__pb2.RunJobRequest.FromString,
                    response_serializer=common__pb2.Empty.SerializeToString,
            ),
            'UpdateJob': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateJob,
                    request_deserializer=master__to__worker__pb2.UpdateJobRequest.FromString,
                    response_serializer=common__pb2.Empty.SerializeToString,
            ),
            'NewGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.NewGroup,
                    request_deserializer=master__to__worker__pb2.NewGroupRequest.FromString,
                    response_serializer=common__pb2.Empty.SerializeToString,
            ),
            'KillJob': grpc.unary_unary_rpc_method_handler(
                    servicer.KillJob,
                    request_deserializer=master__to__worker__pb2.KillJobRequest.FromString,
                    response_serializer=common__pb2.Empty.SerializeToString,
            ),
            'BroadcastFinish': grpc.unary_unary_rpc_method_handler(
                    servicer.BroadcastFinish,
                    request_deserializer=common__pb2.Empty.FromString,
                    response_serializer=common__pb2.Empty.SerializeToString,
            ),
            'TrainingBegin': grpc.unary_unary_rpc_method_handler(
                    servicer.TrainingBegin,
                    request_deserializer=common__pb2.Empty.FromString,
                    response_serializer=common__pb2.Empty.SerializeToString,
            ),
            'RestartTrainers': grpc.unary_unary_rpc_method_handler(
                    servicer.RestartTrainers,
                    request_deserializer=common__pb2.Empty.FromString,
                    response_serializer=common__pb2.Empty.SerializeToString,
            ),
            'ShutDown': grpc.unary_unary_rpc_method_handler(
                    servicer.ShutDown,
                    request_deserializer=common__pb2.Empty.FromString,
                    response_serializer=common__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'MasterToWorker', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MasterToWorker(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RunJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MasterToWorker/RunJob',
            master__to__worker__pb2.RunJobRequest.SerializeToString,
            common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MasterToWorker/UpdateJob',
            master__to__worker__pb2.UpdateJobRequest.SerializeToString,
            common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MasterToWorker/NewGroup',
            master__to__worker__pb2.NewGroupRequest.SerializeToString,
            common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KillJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MasterToWorker/KillJob',
            master__to__worker__pb2.KillJobRequest.SerializeToString,
            common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BroadcastFinish(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MasterToWorker/BroadcastFinish',
            common__pb2.Empty.SerializeToString,
            common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TrainingBegin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MasterToWorker/TrainingBegin',
            common__pb2.Empty.SerializeToString,
            common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RestartTrainers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MasterToWorker/RestartTrainers',
            common__pb2.Empty.SerializeToString,
            common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShutDown(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MasterToWorker/ShutDown',
            common__pb2.Empty.SerializeToString,
            common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
